# usage:
# expect /home/ubuntu/code/SessionManager/support/test.exp ssh ubuntu 34.229.204.20 22 _2021@NetEco 0 ssh ubuntu 34.229.204.20 22 _2021@NetEco 1 "$ " "touch abc.txt"

# puts $argv
# puts $argc

# 超时时间
set timeout 30

# 将参数索引置为1
set idx 0

# 初始层级置为1
set level 1

#trap sigwinch spawned
trap {
  echo "resize"
  set columns [stty columns]
  set rows [stty rows]
  echo "resize, rows="$rows", columns="$columns
  stty rows $rows columns $cols < $spawn_out(slave,name)
} WINCH

# 遍历参数，按位解析
while {$idx < $argc} {
  # puts "loop begion level=$level"

  set protocol [lindex $argv $idx]; incr idx
  # puts "set protocol=$protocol"
  set user [lindex $argv $idx]; incr idx
  # puts "set user=$user"
  set host [lindex $argv $idx]; incr idx
  # puts "set host=$host"
  set port [lindex $argv $idx]; incr idx
  # puts "set port=$port"
  set password [lindex $argv $idx]; incr idx
  # puts "set password=$password"
  set commandn [lindex $argv $idx]; incr idx
  # puts "set commandn=$commandn"
  set commands [lrange $argv $idx [expr $commandn+$idx-1]]; incr idx $commandn
  # puts "set commands=$commands"

  while { true } {
    if {$level == 1} {
      # puts "1st login"
      spawn ssh -p $port $user@$host
    } else {
      # puts "2nd login"
      send "ssh -p $port $user@$host\n"
      # spawn ssh -p $port $user@$host
    }
    expect {
      timeout {
        puts "timeout!"
        exit 1
      }

      -re "\[#$] " {
        # puts "send commands"
        # 登录成功，逐一执行命令
        if {$commandn} {
          set commandi 0
          while { $commandi < $commandn } {
            if { $commandi > 0 } {
                expect "[lindex $commands $commandi]" {
                    incr commandi
                    send "[lindex $commands $commandi]\n"
                }
            } else {
                incr commandi
                send "[lindex $commands $commandi]\n"
            }
            incr commandi
          }
        }
        break
      }

      -re "\[Tt]oken:" {
        set timeout 600
        expect_user -re "(.*)\n"
        set timeout 10
        send "$expect_out(1,string)\n"
        exp_continue
      }

      -re "continue connecting.*" {
        send "yes\n"
        exp_continue
      }

      -re "\[Pp]assword:" {
        # puts "send password"
        send "$password\n"
        exp_continue
      }

      eof {
        exit
      }
    }
    # end of expect
  }
  incr level
}

# puts "debug: interact mode"
interact
